CREATE OR REPLACE FUNCTION os.fn_create_ext_table(p_table text, p_columns text[], p_connection_id integer, p_sql_text text)
  RETURNS void AS
$$
DECLARE
        v_function_name text := 'os.fn_create_ext_table';
        v_location int;
        
        v_sql text;
        v_table text;
        v_ext_location text;
        v_count int;
BEGIN
        v_location := 1000;
        PERFORM NULL
        FROM os.ext_connection
        WHERE id = p_connection_id;

        GET DIAGNOSTICS v_count = ROW_COUNT;
        
        v_location := 1500;
        IF v_count = 0 THEN
                RAISE EXCEPTION 'ConnectionID: "%" is not valid', p_connection_id;
        END IF;

        v_location := 2000;
        v_table := LOWER(p_table);
        v_sql := 'DROP EXTERNAL TABLE IF EXISTS ' || v_table;
        RAISE INFO '%', v_sql;
        EXECUTE v_sql;

        v_location := 3000;
        FOR i IN array_lower(p_columns, 1)..array_upper(p_columns,1) LOOP
                IF i = 1 THEN
                        v_sql := 'CREATE EXTERNAL TABLE ' || v_table || E' \n' ||
                                '(' || p_columns[i];
                ELSE
                        v_sql := v_sql || E', \n' || p_columns[i];
                END IF;

        END LOOP;

        v_location := 3500;
        v_sql := v_sql || E')\n';

        v_location := 4000;
        SELECT 'LOCATION (''' || gpfdisturl || '+' || p_connection_id || '+' || p_sql_text || '#transform=externaldata'')'
        INTO v_ext_location
        FROM 
        (SELECT value AS gpfdisturl FROM os.variables WHERE name = 'gpfdistUrl') AS a;

        v_location := 5000;
        v_sql := v_sql || v_ext_location || ''' FORMAT ''TEXT'' (delimiter ''|'' null ''null'')';
        RAISE INFO '%', v_sql;
        EXECUTE v_sql;
EXCEPTION
        WHEN OTHERS THEN
                RAISE EXCEPTION '(%:%:%)', v_function_name, v_location, sqlerrm;
END;
$$
  LANGUAGE plpgsql VOLATILE;

