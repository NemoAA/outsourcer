#!/bin/bash
set -e
source ~/.bashrc
############################################################################################################################
#
# Outsourcer start script. 
# Be sure to have sourced the os_path.sh script.
#
############################################################################################################################

if [ -z $PGPORT ]; then 
	echo "Must set PGPORT in environment variables.  Exiting.";
	echo Exiting
	exit 0
fi

if [ -z $PGDATABASE ]; then 
	echo "Must set PGDATABASE in environment variables.  Exiting.";
	echo Exiting
	exit 0
fi

if [ -z $OSCLASSPATH ]; then
	echo "Must source the os_path.sh file first.  Exiting.";
	echo Exiting
	exit 0
fi

gpUserName=`whoami`

############################################################################################################################
#
# Make sure Outsourcer hasn't already started
#
############################################################################################################################
check=$(ps -ef 2> /dev/null | grep Outsourcer.jar | grep ExternalDataD | grep -v grep | wc -l)

if [ $check = 1 ]; then
	echo Outsourcer has already started!
	exit 0
fi

############################################################################################################################
#
# Sync the environment variables to the database
#
############################################################################################################################

max_jobs=$(psql -t -A -c "SELECT value FROM os.variables WHERE name = 'max_jobs'")
o_fetch_size=$(psql -t -A -c "SELECT value FROM os.variables WHERE name = 'oFetchSize'")

psql -q -c "TRUNCATE os.ao_variables"

psql -q -c "INSERT INTO os.ao_variables (name, value) VALUES ('Xmx', '$XMX')"
psql -q -c "INSERT INTO os.ao_variables (name, value) VALUES ('Xms', '$XMS')"
psql -q -c "INSERT INTO os.ao_variables (name, value) VALUES ('osJar', '$OSJAR')"
psql -q -c "INSERT INTO os.ao_variables (name, value) VALUES ('osAgentJar', '$OSAGENTJAR')"
psql -q -c "INSERT INTO os.ao_variables (name, value) VALUES ('osUIJar', '$OSUIJAR')"
psql -q -c "INSERT INTO os.ao_variables (name, value) VALUES ('gpdbJar', '$GPDBJAR')"
psql -q -c "INSERT INTO os.ao_variables (name, value) VALUES ('msJar', '$MSJAR')"
psql -q -c "INSERT INTO os.ao_variables (name, value) VALUES ('oJar', '$OJAR')"
psql -q -c "INSERT INTO os.ao_variables (name, value, restart) VALUES ('max_jobs', '$max_jobs', false)"
psql -q -c "INSERT INTO os.ao_variables (name, value, restart) VALUES ('oFetchSize', '$o_fetch_size', false)"

echo Environment variables updated in Greenplum
############################################################################################################################
#
# Reset the Queue
#
############################################################################################################################
psql -q -c "INSERT INTO os.ao_queue (queue_id, status, queue_date, start_date, end_date, error_message, num_rows, id, refresh_type, target_schema_name, target_table_name, target_append_only, target_compressed, target_row_orientation, source_type, source_server_name, source_instance_name, source_port, source_database_name, source_schema_name, source_table_name, source_user_name, source_pass, column_name, sql_text, snapshot) SELECT queue_id, 'failed' as status, queue_date, start_date, now() as end_date, 'Restart of Outsourcer' as error_message, num_rows, id, refresh_type, target_schema_name, target_table_name, target_append_only, target_compressed, target_row_orientation, source_type, source_server_name, source_instance_name, source_port, source_database_name, source_schema_name, source_table_name, source_user_name, source_pass, column_name, sql_text, snapshot FROM os.queue WHERE status = 'processing'"

echo Queue reset
############################################################################################################################
#
# Analyze the os tables
#
############################################################################################################################
psql -q -c "VACUUM ANALYZE os.ao_variables"
psql -q -c "VACUUM ANALYZE os.ao_queue"
psql -q -c "VACUUM ANALYZE os.ao_job"
echo os tables analyzed 

############################################################################################################################
#
# Start Outsourcer
#
############################################################################################################################
echo Starting Outsourcer

nohup java -classpath $OSCLASSPATH -Xms$XMS -Xmx$XMX ExternalDataD localhost $PGPORT $PGDATABASE $gpUserName > $OSLOG 2>&1 < $OSLOG &
echo Outsourcer started
